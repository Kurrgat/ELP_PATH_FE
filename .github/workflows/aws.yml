name: Deploy to Amazon ECS

on:
  push:
    branches: [ "main" ]

env:
  AWS_REGION: us-east-2                   # set this to your preferred AWS region, e.g. us-west-1
  #ECR_REPOSITORY: my-ecr-repo           # set this to your Amazon ECR repository name
  #ECS_SERVICE: my-ecs-service1                 # set this to your Amazon ECS service name
  #ECS_CLUSTER: my-ecs-cluster                 # set this to your Amazon ECS cluster name
  #ECS_TASK_DEFINITION: .github/workflows/my-ecs-taskdef-revision14.json # set this to the path to your Amazon ECS task definition in GitHub repo
                                               # file, e.g. .aws/task-definition.json
  #CONTAINER_NAME: my-ecs-container          # set this to the name of the container in the
                                               # containerDefinitions section of your task definition

permissions:
  contents: read
jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: elpfe
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      # Set up AWS Credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # Login to Amazon ECR
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      # Build and Push Frontend Docker Image to ECR
      - name: Build and Push Frontend
        run: |
          docker build -t angular-app .
          docker tag angular-app:latest ${{ secrets.FRONTEND_REPO_URI }}:latest
          docker push ${{ secrets.FRONTEND_REPO_URI }}:latest

     
      # Deploy ECS Service Update (Optional)
      - name: Update ECS Service with New Images
        run: |
          aws ecs update-service \
          --cluster my-cluster \
          --service frontend-service \
          --force-new-deployment


